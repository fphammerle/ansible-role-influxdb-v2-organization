# https://docs.influxdata.com/influxdb/v2.1/api/
- name: login
  uri:
    method: POST
    url: '{{ influxdb_v2_organization_url }}/api/v2/signin'
    force_basic_auth: yes
    # naming `url_{username,password}` based on
    # https://web.archive.org/web/20211226100248/https://docs.ansible.com/ansible/latest/collections/community/grafana/grafana_datasource_module.html#parameter-url_username
    url_username: '{{ influxdb_v2_organization_url_username }}'
    url_password: '{{ influxdb_v2_organization_url_password }}'
    status_code: 204
  register: _login
- name: 'check if organization {{ influxdb_v2_organization_name | to_json }} exists'
  uri: # https://docs.influxdata.com/influxdb/v2.1/api/#operation/GetOrgs
    method: GET
    url: '{{ influxdb_v2_organization_url }}/api/v2/orgs?org={{ influxdb_v2_organization_name | urlencode }}&limit=2'
    headers: {Cookie: '{{ _login.cookies_string }}'}
    status_code: [200, 404]
  register: _organizations
- name: 'verify organization name {{ influxdb_v2_organization_name | to_json }} is unambiguous'
  assert:
    that: >-
      (_organizations.json.code is defined
       and _organizations.json.code == "not found")
      or (_organizations.json.orgs | length) == 1
- name: 'create organization {{ influxdb_v2_organization_name | to_json }}'
  uri: # https://docs.influxdata.com/influxdb/v2.0/api/#operation/PostTasks
    method: POST
    url: '{{ influxdb_v2_organization_url }}/api/v2/orgs'
    headers: {Cookie: '{{ _login.cookies_string }}'}
    body_format: json
    body: {name: '{{ influxdb_v2_organization_name }}'}
    status_code: 201
  changed_when: true
  when: _organizations.json.orgs | default([]) | length == 0
  register: _create_organization
- name: set return values
  set_fact:
    influxdb_v2_organization_url_cookies_string: '{{ _login.cookies_string }}'
